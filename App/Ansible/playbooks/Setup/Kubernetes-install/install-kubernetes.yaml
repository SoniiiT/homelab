- name: Update and upgrade apt packages
  hosts: all
  become: true

  tasks:
    - name: Update packages with apt
      when: ansible_pkg_mgr == 'apt'
      ansible.builtin.apt:
        update_cache: true

    - name: Upgrade packages with apt
      when: ansible_pkg_mgr == 'apt'
      ansible.builtin.apt:
        upgrade: dist

- name: Install Docker
  hosts: docker
  become: true

  tasks:
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu noble stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: true

    - name: Add User to Docker Group
      user:
        name: soniiit
        groups: docker
        append: true

    - name: Reboot 

- name: Install Kubernetes Server
  hosts: server
  become: true

  tasks:
    - name: Install K3s on k3s-soniiit-server01
      ansible.builtin.shell:
        cmd: curl -sfL https://get.k3s.io | sh - server --cluster-init --tls-san {{ kubernetes_vip }} --no-extras --k3s-extra-args '--disable local-storage --docker'
      when: inventory_hostname == "k3s-soniiit-server01"

    - name: Install KubeVIP RBAC
      ansible.builtin.shell:
        cmd: curl https://kube-vip.io/manifests/rbac.yaml > /var/lib/rancher/k3s/server/manifests/kube-vip-rbac.yaml
      when: inventory_hostname == "k3s-soniiit-server01"

    - name: Install KubeVIP DaemonSet
      ansible.builtin.shell:
        cmd: |
          kubectl apply -f https://kube-vip.io/manifests/rbac.yaml
          export VIP="{{ kubernetes_vip }}"
          export INTERFACE="{{ kubernetes_interface }}"
          KVVERSION=$(curl -sL https://api.github.com/repos/kube-vip/kube-vip/releases | jq -r ".[0].name")
          alias kube-vip="docker run --network host --rm ghcr.io/kube-vip/kube-vip:$KVVERSION"
          kube-vip manifest daemonset --interface $INTERFACE --address $VIP --inCluster --taint --controlplane --services --arp --leaderElection > /var/lib/rancher/k3s/server/manifests/kube-vip.yaml
      when: inventory_hostname == "k3s-soniiit-server01"

    - name: Install KubeVIP Service LoadBalancer
      ansible.builtin.shell:
        cmd: |
          kubectl apply -f https://raw.githubusercontent.com/kube-vip/kube-vip-cloud-provider/main/manifest/kube-vip-cloud-controller.yaml
          kubectl create configmap -n kube-system kubevip --from-literal range-global="{{ kubernetes_range_global }}"
      when: inventory_hostname == "k3s-soniiit-server01"

    - name: Retrieve K3s node token
      ansible.builtin.shell: cat /var/lib/rancher/k3s/server/node-token
      register: k3s_token
      when: inventory_hostname == "k3s-soniiit-server01"

    - name: Install K3s on K3s other Server
      ansible.builtin.shell:
        cmd: curl -sfL https://get.k3s.io | sh - server --server https://{{ hostvars['k3s-soniiit-server01']['ansible_host'] }}:6443 --token {{ k3s_token.stdout }} --tls-san {{ kubernetes_vip }} --no-extras --k3s-extra-args '--disable local-storage --docker'
      when: inventory_hostname != "k3s-soniiit-server01" and inventory_hostname in groups['server']

    - name: Install K3s on Agents
      ansible.builtin.shell:
        cmd: curl -sfL https://get.k3s.io | sh - agent --server https://{{ kubernetes_vip }}:6443 --token {{ k3s_token.stdout }} --k3s-extra-args '--docker'
      when: inventory_hostname in groups['agent']
