- name: Update and upgrade apt packages
  hosts: server
  become: true

  tasks:
    - name: Update packages with apt
      when: ansible_pkg_mgr == 'apt' and inventory_hostname != "k3s-soniiit-server01"
      ansible.builtin.apt:
        update_cache: true

    - name: Upgrade packages with apt
      when: ansible_pkg_mgr == 'apt' and inventory_hostname != "k3s-soniiit-server01"
      ansible.builtin.apt:
        upgrade: dist

- name: Install Kubernetes Server
  hosts: server
  become: true

  tasks:
    - name: Retrieve K3s node token
      ansible.builtin.shell: cat /var/lib/rancher/k3s/server/node-token
      register: k3s_token
      when: inventory_hostname == "k3s-soniiit-server01"

    - name: Install K3s on K3s other Server
      ansible.builtin.shell:
        cmd: curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server" INSTALL_K3S_CHANNEL=latest sh -s - --server=https://{{ hostvars['k3s-soniiit-server01']['ansible_host'] }}:6443 --token={{ hostvars['k3s-soniiit-server01']['k3s_token'].stdout }} --disable=servicelb --disable=traefik --disable=local-storage --kube-controller-manager-arg bind-address=0.0.0.0 --kube-proxy-arg metrics-bind-address=0.0.0.0 --kube-scheduler-arg bind-address=0.0.0.0 --etcd-expose-metrics true --kubelet-arg containerd=/run/k3s/containerd/containerd.sock
      when: inventory_hostname != "k3s-soniiit-server01" and inventory_hostname in groups['server']
